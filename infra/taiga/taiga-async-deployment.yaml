apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ../../kompose --file docker-compose.yml convert
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: taiga-async
  name: taiga-async
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: taiga-async
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ../../kompose --file docker-compose.yml convert
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: taiga-async
    spec:
      containers:
        - command:
            - /taiga-back/docker/async_entrypoint.sh
          env:
            - name: DEFAULT_FROM_EMAIL
            - name: EMAIL_BACKEND
              value: django.core.mail.backends..EmailBackend
            - name: EMAIL_HOST
            - name: EMAIL_HOST_PASSWORD
            - name: EMAIL_HOST_USER
            - name: EMAIL_PORT
            - name: EMAIL_USE_SSL
            - name: EMAIL_USE_TLS
            - name: ENABLE_TELEMETRY
            - name: POSTGRES_DB
              value: taiga
            - name: POSTGRES_HOST
              value: taiga-db
            - name: POSTGRES_PASSWORD
            - name: POSTGRES_USER
            - name: RABBITMQ_PASS
            - name: RABBITMQ_USER
            - name: TAIGA_SECRET_KEY
            - name: TAIGA_SITES_DOMAIN
            - name: TAIGA_SITES_SCHEME
            - name: TAIGA_SUBPATH
          image: taigaio/taiga-back:latest
          name: taiga-async
          volumeMounts:
            - mountPath: /taiga-back/static
              name: taiga-static-data
            - mountPath: /taiga-back/media
              name: taiga-media-data
      restartPolicy: Always
      volumes:
        - name: taiga-static-data
          persistentVolumeClaim:
            claimName: taiga-static-data
        - name: taiga-media-data
          persistentVolumeClaim:
            claimName: taiga-media-data
